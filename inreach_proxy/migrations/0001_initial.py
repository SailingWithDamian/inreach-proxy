# Generated by Django 5.2.5 on 2025-08-26 16:53

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="EmailInbox",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=255)),
                ("username", models.CharField(max_length=255)),
                ("password", models.CharField(max_length=255)),
                ("imap_host", models.CharField(max_length=255)),
                ("smtp_host", models.CharField(max_length=255)),
                ("settings", models.JSONField(default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="GarminConversations",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("selector", models.CharField(default=None, max_length=255, null=True)),
                ("reply_url", models.CharField(default=None, max_length=255, null=True)),
                (
                    "inbox",
                    models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to="inreach_proxy.emailinbox"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Request",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created", models.DateField(auto_created=True, auto_now=True)),
                (
                    "status",
                    models.IntegerField(choices=[(0, "New"), (1, "Pending"), (2, "Done"), (3, "Failed")], default=0),
                ),
                (
                    "action",
                    models.IntegerField(choices=[(0, "Ping"), (1, "SailDocs - GRIB"), (2, "SailDocs - Spot Forecast")]),
                ),
                ("input", models.JSONField()),
                (
                    "conversation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="inreach_proxy.garminconversations"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Response",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created", models.DateField(auto_created=True, auto_now=True)),
                ("status", models.IntegerField(choices=[(0, "Pending"), (1, "Sent"), (2, "Failed")], default=0)),
                ("message", models.CharField(max_length=160)),
                (
                    "conversation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="inreach_proxy.garminconversations"
                    ),
                ),
                (
                    "request",
                    models.ForeignKey(
                        null=True, on_delete=django.db.models.deletion.PROTECT, to="inreach_proxy.request"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ScheduledRequest",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("group", models.IntegerField(choices=[(0, "Daily"), (1, "12 hours"), (2, "6 hours")], default=0)),
                ("action", models.IntegerField(choices=[(0, "Ping"), (1, "SailDocs - GRIB")])),
                ("input", models.JSONField()),
                (
                    "conversation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="inreach_proxy.garminconversations"
                    ),
                ),
            ],
        ),
    ]
