name: Release
on: { push: { branches: [ main ] } }
permissions:
  contents: write
  packages: write
jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      release: ${{ steps.data.outputs.release }}
    steps:
      - uses: actions/checkout@v5
      - id: data
        run: echo "release=v$(git show -s --format=%ct)" >> $GITHUB_OUTPUT

  container:
    runs-on: ubuntu-latest
    needs: [ setup ]
    steps:
      - uses: actions/checkout@v4
      - name: Build container
        run: |
          docker run \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v $PWD:/workspace -w /workspace \
            buildpacksio/pack build \
            --builder heroku/builder:24 \
            ghcr.io/${GITHUB_REPOSITORY,,}:${{ needs.setup.outputs.release }}
      - name: Publish container
        run: |
          echo '${{ secrets.GITHUB_TOKEN }}' | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
          docker push ghcr.io/${GITHUB_REPOSITORY,,}:${{ needs.setup.outputs.release }}
  tag:
    runs-on: ubuntu-latest
    needs: [ setup, container ]
    steps:
      - name: Create GitHub release
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'Release ${{ needs.setup.outputs.release }}',
              tag_name: '${{ needs.setup.outputs.release }}',
              draft: false,
              prerelease: false,
              generate_release_notes: true,
            })